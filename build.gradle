plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id("co.uzzu.dotenv.gradle") version "4.0.0"
}

group 'mc.obliviate'
version '4.1.13.3'
compileJava.options.encoding = 'UTF-8'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'com.github.johnrengelman.shadow'

    group rootProject.group
    version rootProject.version
    compileJava.options.encoding = 'UTF-8'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'https://repo.maven.apache.org/maven2/' }
        maven { url 'https://repo.papermc.io/repository/maven-public/'}
        maven { url 'https://jitpack.io' }
    }

    tasks.shadowJar {
        archiveClassifier.set("")
        archiveFileName.set(project.name + "-" + project.version + ".jar")
        // Output dosyasını build klasörü altına veriyoruz, target değil
        destinationDirectory.set(file("${project.buildDir}/libs"))
    }

    publishing {
        publications {
            shadow(MavenPublication) {
                artifact tasks.shadowJar
                groupId = project.group
                artifactId = project.name
                version = project.version
                pom {
                    name = project.name
                    description = 'Obliviate Inventories library'
                }
            }
        }
        
        repositories {
            maven {
                name = "reposilite"
                url = uri("https://repo.oyunzor.com/snapshots")
                credentials {
                    username = env.fetchOrNull("REPOSILITE_USERNAME") ?: System.getenv("USERNAME")
                    password = env.fetchOrNull("REPOSILITE_TOKEN") ?: System.getenv("TOKEN")
                }
            }
        }
    }
    
    // Publish task'ının shadowJar'ı beklemesini sağlıyoruz
    tasks.withType(PublishToMavenRepository) {
        dependsOn tasks.shadowJar
    }
}